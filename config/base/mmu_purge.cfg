########################################################################################################################
# Happy Hare MMU Software
# Supporting macros
#
# THIS FILE IS READ ONLY
#
# Copyright (C) 2022-2025  moggieuk#6538 (discord)
#                          moggieuk@hotmail.com
# This file may be distributed under the terms of the GNU GPLv3 license.
#
# Goal: Standalone (very simplistic reference) filament purging
#
# (\_/)
# ( *,*)
# (")_(") Happy Hare Ready
#
#
# When using this macro in print it is important to turn off the wipetower in your slicer
# (read the wiki: Slicer Setup & Toolchange-Movement pages)
# Then set the following parameters in mmu_parameters.cfg:
#
#   purge_macro: _MMU_PURGE
#   force_purge_standalone: 1
#
[gcode_macro _MMU_PURGE]
description: Simple reference filament purge

gcode:
    # Happy Hare retraction settings from sequence macros
    {% set sequence_vars = printer['gcode_macro _MMU_SEQUENCE_VARS'] %}
    {% set park_vars = printer['gcode_macro _MMU_PARK'] %}
    {% set retracted_length = park_vars.retracted_length %}
    {% set retract_speed = sequence_vars.retract_speed|int %}
    {% set unretract_speed = sequence_vars.unretract_speed|int %}

    # Happy Hare provided purge data
    {% set toolchange_purge_volume = printer.mmu.toolchange_purge_volume|default(0)|float %}
    {% set extruder_filament_remaining = printer.mmu.extruder_filament_remaining|default(0)|float %}

    # Not used in reference macro but full purge volume matrix from the slicer can be loaded like this
    # https://github.com/moggieuk/Happy-Hare/wiki/Gcode-Preprocessing)
    {% set pv = printer.mmu.slicer_tool_map.purge_volumes %}

    # Calculate amount of filament to purge
    {% set filament_diameter = printer.configfile.config.extruder.filament_diameter|float %}
    {% set filament_cross_section = (filament_diameter / 2) ** 2 * 3.1415 %}
    {% set purge_len = (toolchange_purge_volume / filament_cross_section) + extruder_filament_remaining %}
    {% set segment_len = 2.0 %}

    # Undo Happy Hare retraction before starting purge
    {% if retracted_length > 0 %}
        MMU_LOG MSG="Un-retracting {retracted_length}mm"
        M83 ; Extruder relative
        G1 E{retracted_length} F{unretract_speed|abs * 60}
    {% endif %}

    MMU_LOG MSG="Purging {purge_len | round(1)}mm of filament"

    # Purge in segments so it is still possible to detect clogs and pause
    {% set num_segments = (purge_len // segment_len) | int %}
    {% for _ in range(num_segments) %}
        __MMU_PURGE_SEGMENT LENGTH={segment_len}
    {% endfor %}
    __MMU_PURGE_SEGMENT LENGTH={purge_len % segment_len}

    # Retract to match what Happy Hare is expecting
    {% if retracted_length > 0 %}
        MMU_LOG MSG="Retracting {retracted_length}mm"
        M83 ; Extruder relative
        G1 E-{retracted_length} F{retract_speed|abs * 60}
    {% endif %}

    MMU_LOG MSG="Purging complete"


# Helper that allows for check of "runout/clog" indicator
[gcode_macro __MMU_PURGE_SEGMENT]
gcode:
    {% set vars = printer['gcode_macro _MMU_PURGE_VARS'] %}
    {% set extruder_purge_speed = vars['extruder_purge_speed']|float %}
    {% set length = params.LENGTH|float %}
    {% set clog_runout_detected = printer.mmu.clog_runout_detected|default(false)|lower == 'true' %} # TODO Future

    {% if not clog_runout_detected %}
        G1 E{length} F{extruder_purge_speed * 60}
    {% endif %}
