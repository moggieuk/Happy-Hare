########################################################################################################################
# Happy Hare MMU Software
#
# EDIT THIS FILE BASED ON YOUR SETUP
#
# Copyright (C) 2022-2025  moggieuk#6538 (discord)
#                          moggieuk@hotmail.com
# This file may be distributed under the terms of the GNU GPLv3 license.
#
# Goal: Define the logical MMU machine composed of one or more physical MMU units
#       and configure operation and features for the overall MMU operation for your printer.
#       Note that individual MMU unit setup is contained in separate `XXX_parameters.cfg` files
#       and Macro configuration is specified separately in 'mmu_macro_vars.cfg'.
#
# Full details in the Happy Hare wiki: https://github.com/moggieuk/Happy-Hare/wiki
#
# (\_/)
# ( *,*)
# (")_(") Happy Hare Ready
#




# ┌─────────────────────────────────────────────────────────────────────────────────────────────┐
# │ ███╗   ███╗███╗   ███╗██╗   ██╗    ███╗   ███╗ █████╗  ██████╗██╗  ██╗██╗███╗   ██╗███████╗ │
# │ ████╗ ████║████╗ ████║██║   ██║    ████╗ ████║██╔══██╗██╔════╝██║  ██║██║████╗  ██║██╔════╝ │
# │ ██╔████╔██║██╔████╔██║██║   ██║    ██╔████╔██║███████║██║     ███████║██║██╔██╗ ██║█████╗   │
# │ ██║╚██╔╝██║██║╚██╔╝██║██║   ██║    ██║╚██╔╝██║██╔══██║██║     ██╔══██║██║██║╚██╗██║██╔══╝   │
# │ ██║ ╚═╝ ██║██║ ╚═╝ ██║╚██████╔╝    ██║ ╚═╝ ██║██║  ██║╚██████╗██║  ██║██║██║ ╚████║███████╗ │
# │ ╚═╝     ╚═╝╚═╝     ╚═╝ ╚═════╝     ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝╚══════╝ │
# └─────────────────────────────────────────────────────────────────────────────────────────────┘
#
# A mmu_machine is a logical collection of one or more potentially disimilar MMU units aggregated together to
# act like and be managed as one. MMU's can be physically combined using a bowden splitter/combiner.
# The gates of each MMU will form a contiguous sequence starting from 0 for the first mmu_unit defined.
#
# HOMING CAPABLE EXTRUDER ('homing_extruder')
# With Happy Hare installed even the extruder can be homed. You will find the usual 'endstop' parameters can be added
# to your '[extruder]' section.  Useless you have some clever load cell attached to your nozzle it only really makes
# sense to configure stallguard style "touch" homing. To do this add lines similar to this to your existing
# '[extruder]' definition in printer.cfg.
#
#    [extruder]
#    endstop_pin: tmc2209_extruder:virtual_endstop
#
# Also be sure to add the appropriate stallguard config to the TMC section, e.g.
#
#    [tmc2209 extruder]
#    diag_pin: E_DIAG		# Set to MCU pin connected to TMC DIAG pin for extruder
#    driver_SGTHRS: 100		# 255 is most sensitive value, 0 is least sensitive
#
# Happy Hare will take care of the rest and add a 'mmu_ext_touch' endstop automatically
#
[mmu_machine]
units: [[PARAM_MMU_UNITS]]			# Comma separated list of mmu unit config names. E.g unit0, unit1

extruder_name: extruder		# Name of extruder that MMU is attached to. Defaults to 'extruder'
homing_extruder: 1		# CAUTION: Normally this should be 1. 0 will disable the homing extruder capability

# Filament sensors ALWAYS SHARED BY ALL mmu_units:
# (comment out if not fitted)
#
# These sensors are on the toolhead and often controlled by the main printer mcu since there can only be one.
#   'extruder_switch_pin'    .. 'extruder' sensor detects filament just before the extruder entry
#   'toolhead_switch_pin'    .. 'toolhead' sensor detects filament after extruder entry
#
[% if PIN_EXTRUDER_SENSOR %]
extruder_switch_pin: [[PIN_EXTRUDER_SENSOR]]
[% else %]
#extruder_switch_pin:
[% endif %]
[% if PIN_TOOLHEAD_SENSOR %]
toolhead_switch_pin: [[PIN_TOOLHEAD_SENSOR]]
[% else %]
#toolhead_switch_pin:
[% endif %]




# ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
# │ ██████╗  █████╗ ███████╗██╗ ██████╗     ██████╗ ██████╗ ███████╗██████╗  █████╗ ████████╗██╗ ██████╗ ███╗   ██╗ │
# │ ██╔══██╗██╔══██╗██╔════╝██║██╔════╝    ██╔═══██╗██╔══██╗██╔════╝██╔══██╗██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║ │
# │ ██████╔╝███████║███████╗██║██║         ██║   ██║██████╔╝█████╗  ██████╔╝███████║   ██║   ██║██║   ██║██╔██╗ ██║ │
# │ ██╔══██╗██╔══██║╚════██║██║██║         ██║   ██║██╔═══╝ ██╔══╝  ██╔══██╗██╔══██║   ██║   ██║██║   ██║██║╚██╗██║ │
# │ ██████╔╝██║  ██║███████║██║╚██████╗    ╚██████╔╝██║     ███████╗██║  ██║██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║ │
# │ ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝ ╚═════╝     ╚═════╝ ╚═╝     ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝ │
# └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
#
# This section configures the Happy Hare features and shared settings that govern all connected MMU units
#
[mmu]
happy_hare_version: [[PARAM_HAPPY_HARE_VERSION]]			# Don't mess, used for upgrade detection


# ██╗      ██████╗  ██████╗  ██████╗ ██╗███╗   ██╗ ██████╗ 
# ██║     ██╔═══██╗██╔════╝ ██╔════╝ ██║████╗  ██║██╔════╝ 
# ██║     ██║   ██║██║  ███╗██║  ███╗██║██╔██╗ ██║██║  ███╗
# ██║     ██║   ██║██║   ██║██║   ██║██║██║╚██╗██║██║   ██║
# ███████╗╚██████╔╝╚██████╔╝╚██████╔╝██║██║ ╚████║╚██████╔╝
# ╚══════╝ ╚═════╝  ╚═════╝  ╚═════╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝ 
#
# log_level & logfile_level can be set to one of (0 = essential, 1 = info, 2 = debug, 3 = trace, 4 = developer + stepper moves)
# Generally you can keep console logging to a minimal whilst still sending debug output to the mmu.log file
# Increasing the console log level is only really useful during initial setup to save having to constantly open the log file
# Note: that it is not recommended to keep logging at level greater that 2 (debug) if not debugging an issue because
# of the additional overhead
#
log_level: 1
log_file_level: 2			# Can also be set to -1 to disable log file completely
log_statistics: 1 			# 1 to log statistics on every toolchange (default), 0 to disable (but still recorded)
log_visual: 1				# 1 log visual representation of filament, 0 = disable
log_startup_status: 1			# Whether to log tool to gate status on startup, 1 = summary (default), 0 = disable
log_m117_messages: 1			# Whether send toolchange message via M117 to screen


# ████████╗ ██████╗  ██████╗ ██╗     ██╗  ██╗███████╗ █████╗ ██████╗ 
# ╚══██╔══╝██╔═══██╗██╔═══██╗██║     ██║  ██║██╔════╝██╔══██╗██╔══██╗
#    ██║   ██║   ██║██║   ██║██║     ███████║█████╗  ███████║██║  ██║
#    ██║   ██║   ██║██║   ██║██║     ██╔══██║██╔══╝  ██╔══██║██║  ██║
#    ██║   ╚██████╔╝╚██████╔╝███████╗██║  ██║███████╗██║  ██║██████╔╝
#    ╚═╝    ╚═════╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ 
#
# Speeds of extruder movement. The 'sync' speeds will be used when gear and extruder steppers are moving in sync
#
extruder_load_speed: 16			# mm/s speed of load move inside extruder from homing position to meltzone
extruder_unload_speed: 16		# mm/s speed of unload moves inside of extruder (very initial move from meltzone is 50% of this)
extruder_sync_load_speed: 18		# mm/s speed of synchronized extruder load moves
extruder_sync_unload_speed: 18		# mm/s speed of synchronized extruder unload moves
extruder_homing_speed: 18		# mm/s speed of extruder only homing moves (e.g. to toolhead sensor)

# When Happy Hare calls out to a macro for user customization and for parking moves these settings are applied and the previous
# values automatically restored afterwards. This allows for deterministic movement speed regardless of the starting state.
#
macro_toolhead_max_accel: 0		# Default printer toolhead acceleration applied when macros are run. 0 = use printer max
macro_toolhead_min_cruise_ratio: 0.5	# Default printer cruise ratio applied when macros are run


# ████████╗██╗██████╗     ███████╗ ██████╗ ██████╗ ███╗   ███╗██╗███╗   ██╗ ██████╗ 
# ╚══██╔══╝██║██╔══██╗    ██╔════╝██╔═══██╗██╔══██╗████╗ ████║██║████╗  ██║██╔════╝ 
#    ██║   ██║██████╔╝    █████╗  ██║   ██║██████╔╝██╔████╔██║██║██╔██╗ ██║██║  ███╗
#    ██║   ██║██╔═══╝     ██╔══╝  ██║   ██║██╔══██╗██║╚██╔╝██║██║██║╚██╗██║██║   ██║
#    ██║   ██║██║         ██║     ╚██████╔╝██║  ██║██║ ╚═╝ ██║██║██║ ╚████║╚██████╔╝
#    ╚═╝   ╚═╝╚═╝         ╚═╝      ╚═════╝ ╚═╝  ╚═╝╚═╝     ╚═╝╚═╝╚═╝  ╚═══╝ ╚═════╝ 
#
# Tip forming responsibility can be split between slicer (in-print) and standalone macro (not in-print) or forced to always
# be done by Happy Hare's standalone macro. Since you always need the option to form tips without the slicer so it is
# generally easier to completely turn off the slicer, force "standalone" tip forming and tune only in Happy Hare.
#
# When Happy Hare is asked to form a tip it will run the referenced macro. Two are reference examples are provided but
# you can implement your own:
#   _MMU_FORM_TIP .. default tip forming similar to popular slicers like Superslicer and Prusaslicer
#   _MMU_CUT_TIP  .. for Filametrix (originally ERCFv2) or similar style toolhead filament cutting system
#
# NOTE: For MMU located cutting like the optional EREC cutter you should set still this to _MMU_FORM_TIP to build a decent
# tip prior to extraction and cutting after the unload.
#
# Often it is useful to increase the extruder current for the rapid movement to ensure high torque and no skipped steps
#
# If opting for slicer tip forming you MUST configure where the slicer leaves the filament in the extruder since
# there is no way to determine this. This can be ignored if all tip forming is performed by Happy Hare
#
force_form_tip_standalone: 1		# 0 = Slicer in print else standalone, 1 = Always standalone tip forming (TURN SLICER OFF!)
form_tip_macro: _MMU_FORM_TIP           # Name of macro to call to perform the tip forming (or cutting) operation
extruder_form_tip_current: 100		# % of extruder current (100%-150%) to use when forming tip (100 to disable)
slicer_tip_park_pos: 0			# This specifies the position of filament in extruder after slicer completes tip forming


# ██████╗ ██╗   ██╗██████╗  ██████╗ ██╗███╗   ██╗ ██████╗ 
# ██╔══██╗██║   ██║██╔══██╗██╔════╝ ██║████╗  ██║██╔════╝ 
# ██████╔╝██║   ██║██████╔╝██║  ███╗██║██╔██╗ ██║██║  ███╗
# ██╔═══╝ ██║   ██║██╔══██╗██║   ██║██║██║╚██╗██║██║   ██║
# ██║     ╚██████╔╝██║  ██║╚██████╔╝██║██║ ╚████║╚██████╔╝
# ╚═╝      ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝ 
#
# After a toolchange it is necessary to purge the old filament. Similar to tip forming this can be done by the slicer and/or
# by Happy Hare using an extension like Blobifer. If a purge_macro is defined it will be called when not printing or whenever
# the slicer isn't going to purge (like initial tool load). You can force it to always be called in a print by setting
# force_purge_standalone, but remember to turn off the slicer wipetower
#
# The default is for no (empty) macro so purging will not be done out of a print and thus wipetower. Two options are shipped with
# Happy Hare but you can also build your own custom one:
#   _MMU_PURGE .. default purging that just dumps the desired amount of filament (setup correct parking before enabling this!)
#   BLOBIFIER   .. for excellent Blobifer addon (https://github.com/Dendrowen/Blobifier)
#
# Often it is useful to increase the extruder current for the often rapid puring movement to ensure high torque and no skipped steps
#
force_purge_standalone: 0		# 0 = Slicer wipetower in print else standalone, 1 = Always standalone purging (TURN WIPETOWER OFF!)
purge_macro: 				# Name of macro to call to perform the standalone purging operation. E.g. BLOBIFIER, _MMU_PURGE
extruder_purge_current: 100		# % of extruder current (100%-150%) to use when purging (100 to disable)


# ███████╗██╗██╗      █████╗ ███╗   ███╗███████╗███╗   ██╗████████╗    ███╗   ███╗ ██████╗ ███╗   ███╗████████╗
# ██╔════╝██║██║     ██╔══██╗████╗ ████║██╔════╝████╗  ██║╚══██╔══╝    ████╗ ████║██╔════╝ ████╗ ████║╚══██╔══╝
# █████╗  ██║██║     ███████║██╔████╔██║█████╗  ██╔██╗ ██║   ██║       ██╔████╔██║██║  ███╗██╔████╔██║   ██║   
# ██╔══╝  ██║██║     ██╔══██║██║╚██╔╝██║██╔══╝  ██║╚██╗██║   ██║       ██║╚██╔╝██║██║   ██║██║╚██╔╝██║   ██║   
# ██║     ██║███████╗██║  ██║██║ ╚═╝ ██║███████╗██║ ╚████║   ██║       ██║ ╚═╝ ██║╚██████╔╝██║ ╚═╝ ██║   ██║   
# ╚═╝     ╚═╝╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝╚═╝  ╚═══╝   ╚═╝       ╚═╝     ╚═╝ ╚═════╝ ╚═╝     ╚═╝   ╚═╝   
#
# Filament Management include endless spool and spoolman
#
# - Clog detection is available when encoder is fitted and it can detect when filament is not moving and pause the print
# - EndlessSpool feature allows detection of runout on one spool and the automatic mapping of tool to an alternative
#   gate (spool). Set to '1', this feature requires clog detection or gate sensor or pre-gate sensors. EndlessSpool
#   functionality can optionally be extended to attempt to load an empty gate with 'endless_spool_on_load'. On some MMU
#   designs (with linear selector) it can also be configured to eject filament remains to a designated gate rather than
#   defaulting to current gate. A custom gate will disable pre-gate runout detection for EndlessSpool because filament
#   end must completely pass through the gate for selector to move
#
enable_clog_detection: [[PARAM_ENABLE_CLOG_DETECTION]]		# 0 = disable, 1 = static length clog detection, 2 = automatic length clog detection
enable_endless_spool: [[PARAM_ENABLE_ENDLESS_SPOOL]]			# 0 = disable, 1 = enable endless spool
endless_spool_on_load: 0		# 0 = don't apply endless spool on load, 1 = run endless spool if gate is empty
endless_spool_eject_gate: -1		# Which gate to eject the filament remains. -1 = current gate
endless_spool_groups:			# Default EndlessSpool grouping (if empty, no groups are defined)
#
# Spoolman support requires you to correctly enable spoolman with moonraker first. If enabled, the gate SpoolId will
# be used to load filament details and color from the spoolman database and Happy Hare will activate/deactivate
# spools as they are used. The enabled variation allows for either the local map or the spoolman map to be the
# source of truth as well as just fetching filament attributes. See this table for explanation:
#
#                    | Activate/  | Fetch filament attributes | Filament gate    | Filament gate     |
#   spoolman_support | Deactivate | attributes from spoolman  | assignment shown | assignment pulled |
#                    | spool?     | based on spool_id?        | in spoolman db?  | from spoolman db? |
#   -----------------+------------+---------------------------+------------------+-------------------+
#        off         |     no     |           no              |        no        |        no         |
#        readonly    |     yes    |           yes             |        no        |        no         |
#        push        |     yes    |           yes             |        yes       |        no         |
#        pull        |     yes    |           yes             |        yes       |        yes        |
#
spoolman_support: [[PARAM_SPOOLMAN_SUPPORT]]			# off = disabled, readonly = enabled, push = local gate map, pull = remote gate map
pending_spool_id_timeout: 20            # Seconds after which this pending spool_id (set with rfid) is voided
#
# Mainsail/Fluid UI can visualize the color of filaments next to the extruder/tool chooser. The color is dynamic and
# can be customized to your choice:
#
#    slicer   - Color from slicer tool map (what the slicer expects)
#    allgates - Color from all the tools in the gate map after running through the TTG map
#    gatemap  - As per gatemap but hide empty tools
#    off      - Turns off support
#
# Note: Happy Hare will also add the 'spool_id' variable to the Tx macro if spoolman is enabled
#
t_macro_color: slicer			# 'slicer' = default | 'allgates' = mmu | 'gatemap' = mmu without empty gates | 'off'


# ██████╗ ██████╗ ██╗███╗   ██╗████████╗    ███████╗████████╗ █████╗ ████████╗███████╗
# ██╔══██╗██╔══██╗██║████╗  ██║╚══██╔══╝    ██╔════╝╚══██╔══╝██╔══██╗╚══██╔══╝██╔════╝
# ██████╔╝██████╔╝██║██╔██╗ ██║   ██║       ███████╗   ██║   ███████║   ██║   ███████╗
# ██╔═══╝ ██╔══██╗██║██║╚██╗██║   ██║       ╚════██║   ██║   ██╔══██║   ██║   ╚════██║
# ██║     ██║  ██║██║██║ ╚████║   ██║       ███████║   ██║   ██║  ██║   ██║   ███████║
# ╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝       ╚══════╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝   ╚══════╝
#
# These parameters determine how print statistic data is shown in the console. This table can show a lot of data,
# probably more than you'd want to see. Below you can enable/disable options to your needs.
#
# +-----------+---------------------+----------------------+----------+
# |  114(46)  |      unloading      |       loading        | complete |
# |   swaps   | pre  |   -   | post | pre  |   -   | post  |   swap   |
# +-----------+------+-------+------+------+-------+-------+----------+
# | all time  | 0:07 | 47:19 | 0:00 | 0:01 | 37:11 | 33:39 |  2:00:38 |
# |     - avg | 0:00 |  0:24 | 0:00 | 0:00 |  0:19 |  0:17 |     1:03 |
# | this job  | 0:00 | 10:27 | 0:00 | 0:00 |  8:29 |  8:30 |    28:02 |
# |     - avg | 0:00 |  0:13 | 0:00 | 0:00 |  0:11 |  0:11 |     0:36 |
# |      last | 0:00 |  0:12 | 0:00 | 0:00 |  0:10 |  0:14 |     0:39 |
# +-----------+------+-------+------+------+-------+-------+----------+
#             Note: Only formats correctly on Python3
#
# Comma separated list of desired columns
# Options: pre_unload, form_tip, unload, post_unload, pre_load, load, purge, post_load, total
console_stat_columns: unload, load, post_load, total

# Comma separated list of rows. The order determines the order in which they're shown.
# Options: total, total_average, job, job_average, last
console_stat_rows: total, total_average, job, job_average, last

# How you'd want to see the state of the gates and how they're performing
#   string     - poor, good, perfect, etc..
#   percentage - rate of success
#   emoticon   - fun sad to happy faces (python3 only)
console_gate_stat: emoticon

# Always display the full statistics table
console_always_output_full: 1	# 1 = Show full table, 0 = Only show totals out of print


# ███╗   ███╗██╗███████╗ ██████╗   
# ████╗ ████║██║██╔════╝██╔════╝   
# ██╔████╔██║██║███████╗██║        
# ██║╚██╔╝██║██║╚════██║██║        
# ██║ ╚═╝ ██║██║███████║╚██████╗██╗
# ╚═╝     ╚═╝╚═╝╚══════╝ ╚═════╝╚═╝
#
# Important you verify these work for you setup/workflow. Temperature and timeouts
#
timeout_pause: 72000		# Idle time out (printer shuts down) in seconds used when in MMU pause state
disable_heater: 600		# Delay in seconds after which the hotend heater is disabled in the MMU_PAUSE state
default_extruder_temp: 200	# Default temperature for performing swaps and forming tips when not in print (overridden by gate map)
extruder_temp_variance: 2	# When waiting for extruder temperature this is the +/- permissible variance in degrees (>= 1)
#
# Other workflow options
#
startup_home_if_unloaded: 0	# 1 = force mmu homing on startup if unloaded, 0 = do nothing
startup_reset_ttg_map: 0	# 1 = reset TTG map on startup, 0 = do nothing
show_error_dialog: 1		# 1 = show pop-up dialog in addition to console message, 0 = show error in console
strict_filament_recovery: 0	# If enabled with MMU with toolhead sensor, this will cause filament position recovery to
				# perform extra moves to look for filament trapped in the space after extruder but before sensor
filament_recovery_on_pause: 1	# 1 = Run a quick check to determine current filament position on pause/error, 0 = disable
retry_tool_change_on_error: 0	# Whether to automatically retry a failed tool change. If enabled Happy Hare will perform
				# the equivalent of 'MMU_RECOVER' + 'Tx' commands which usually is all that is necessary
				# to recover. Note that enabling this can mask problems with your MMU
bypass_autoload: 1		# If extruder sensor fitted this controls the automatic loading of extruder for bypass operation
#
# Advanced options. Don't mess unless you fully understand. Read documentation.
#
print_start_detection: 1	# ADVANCED: Enabled for Happy Hare to automatically detect start and end of print and call
				# ADVANCED: MMU_PRINT_START and MMU_PRINT_END automatically. Harmless to leave enabled but can disable
                                #           if you think it is causing problems and known START/END is covered in your macros
gcode_load_sequence: 0		# VERY ADVANCED: Gcode loading sequence 1=enabled, 0=internal logic (default)
gcode_unload_sequence: 0	# VERY ADVANCED: Gcode unloading sequence, 1=enabled, 0=internal logic (default)


# ██╗  ██╗██╗     ██╗██████╗ ██████╗ ███████╗██████╗ 
# ██║ ██╔╝██║     ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗
# █████╔╝ ██║     ██║██████╔╝██████╔╝█████╗  ██████╔╝
# ██╔═██╗ ██║     ██║██╔═══╝ ██╔═══╝ ██╔══╝  ██╔══██╗
# ██║  ██╗███████╗██║██║     ██║     ███████╗██║  ██║
# ╚═╝  ╚═╝╚══════╝╚═╝╚═╝     ╚═╝     ╚══════╝╚═╝  ╚═╝
#
# ADVANCED: Klipper tuning
# Timer too close is a catch all error, however it has been found to occur on some systems during homing and probing
# operations especially so with CANbus connected MCUs. Happy Hare uses many homing moves for reliable extruder loading
# and unloading and enabling this option affords klipper more tolerance and avoids this dreaded error
#
update_trsync: 0		# 1 = Increase TRSYNC_TIMEOUT, 0 = Leave the klipper default
#
# Some CANbus boards are prone to this but it have been seen on regular USB boards where a comms timeout will kill
# the print. Since it seems to occur only on homing moves they can be safely retried to workaround. This has been
# working well in practice
canbus_comms_retries: 3		# Number of retries. Recommend the default of 3.
#
# Older neopixels have very finicky timing and can generate lots of "Unable to obtain 'neopixel_result' response"
# errors in klippy.log. An often cited workaround is to increase BIT_MAX_TIME in neopixel.py. This option does that
# automatically for you to save dirtying klipper
update_bit_max_time: 1		# 1 = Increase BIT_MAX_TIME, 0 = Leave the klipper default
#
# BTT ViViD has an incompatible AHT10 sensor and requires the command set to be changed
update_aht10_commands: 0	# 1 = Config AHT10 for BTT ViViD heater sensor, 0 = Leave the klipper default


# ███╗   ███╗ █████╗  ██████╗██████╗  ██████╗ ███████╗
# ████╗ ████║██╔══██╗██╔════╝██╔══██╗██╔═══██╗██╔════╝
# ██╔████╔██║███████║██║     ██████╔╝██║   ██║███████╗
# ██║╚██╔╝██║██╔══██║██║     ██╔══██╗██║   ██║╚════██║
# ██║ ╚═╝ ██║██║  ██║╚██████╗██║  ██║╚██████╔╝███████║
# ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝
#
# ADVANCED: MMU macro overrides
# 'pause_macro' defines what macro to call on MMU error (must put printer in paused state)
# Other macros are detailed in 'mmu_sequence.cfg'
# Also see form_tip_macro in Tip Forming section and purge_macro in Purging section
#
pause_macro: PAUSE 					# What macro to call to pause the print
action_changed_macro: _MMU_ACTION_CHANGED		# Called when action (printer.mmu.action) changes
print_state_changed_macro: _MMU_PRINT_STATE_CHANGED	# Called when print state (printer.mmu.print_state) changes
mmu_event_macro: _MMU_EVENT				# Called on useful MMU events
pre_unload_macro: _MMU_PRE_UNLOAD			# Called before starting the unload
post_form_tip_macro: _MMU_POST_FORM_TIP			# Called immediately after tip forming
post_unload_macro: _MMU_POST_UNLOAD			# Called after unload completes
pre_load_macro: _MMU_PRE_LOAD				# Called before starting the load
post_load_macro: _MMU_POST_LOAD				# Called after the load is complete
unload_sequence_macro: _MMU_UNLOAD_SEQUENCE		# VERY ADVANCED: Optionally called based on 'gcode_unload_sequence'
load_sequence_macro: _MMU_LOAD_SEQUENCE			# VERY ADVANCED: Optionally called based on 'gcode_load_sequence'


# ██████╗ ███████╗███████╗███████╗████████╗    ██████╗ ███████╗███████╗███████╗
# ██╔══██╗██╔════╝██╔════╝██╔════╝╚══██╔══╝    ██╔══██╗██╔════╝██╔════╝██╔════╝
# ██████╔╝█████╗  ███████╗█████╗     ██║       ██║  ██║█████╗  █████╗  ███████╗
# ██╔══██╗██╔══╝  ╚════██║██╔══╝     ██║       ██║  ██║██╔══╝  ██╔══╝  ╚════██║
# ██║  ██║███████╗███████║███████╗   ██║       ██████╔╝███████╗██║     ███████║
# ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝   ╚═╝       ╚═════╝ ╚══════╝╚═╝     ╚══════╝
#
# ADVANCED: See documentation for use
# These are the values that the various "RESET" commands will reset too rather than the built-in defaults. The length
# of the lists must match the number of gates on your MMU.
#
# e.g. MMU_GATE_MAP RESET=1              - will use all the 'gate_XXX' values
#      MMU_TTG_MAP RESET=1               - will use the 'tool_to_gate_map'
#      MMU_ENDLESS_SPOOL_GROUPS RESET=1  - will use the 'endless_spool_groups'
#
# Gate:                #0      #1      #2      #3      #4      #5      #6      #7      #8
#gate_status:          1,      0,      1,      2,      2,     -1,     -1,      0,      1
#gate_filament_name:   one,    two,    three,  four,   five,   six,    seven,  eight,  nine
#gate_material:        PLA,    ABS,    ABS,    ABS+,   PLA,    PLA,    PETG,   TPU,    ABS
#gate_color:           red,    black,  yellow, green,  blue,   indigo, ffffff, grey,   black
#gate_temperature:     210,    240,    235,    245,    210,    200,    215,    240,    240
#gate_spool_id:        3,      2,      1,      4,      5,      6,      7,      -1,     9
#gate_speed_override:  100,    100,    100,    100,    100,    100,    100,    50,     100
#endless_spool_groups: 0,      1,      2,      1,      0,      0,      3,      4,      1
#
# Tool:                T0      T1      T2      T3      T4      T5      T6      T7      T8
#tool_to_gate_map:     0,      1,      2,      3,      4,      5,      6,      7,      8




# ┌───────────────────────────────────────────────────────────────────────────────────────┐
# │ ██╗     ███████╗██████╗     ███████╗███████╗███████╗███████╗ ██████╗████████╗███████╗ │
# │ ██║     ██╔════╝██╔══██╗    ██╔════╝██╔════╝██╔════╝██╔════╝██╔════╝╚══██╔══╝██╔════╝ │
# │ ██║     █████╗  ██║  ██║    █████╗  █████╗  █████╗  █████╗  ██║        ██║   ███████╗ │
# │ ██║     ██╔══╝  ██║  ██║    ██╔══╝  ██╔══╝  ██╔══╝  ██╔══╝  ██║        ██║   ╚════██║ │
# │ ███████╗███████╗██████╔╝    ███████╗██║     ██║     ███████╗╚██████╗   ██║   ███████║ │
# │ ╚══════╝╚══════╝╚═════╝     ╚══════╝╚═╝     ╚═╝     ╚══════╝ ╚═════╝   ╚═╝   ╚══════╝ │
# └───────────────────────────────────────────────────────────────────────────────────────┘
#
# ADVANCED: See documentation for use
# These are the default effects that may be assigned to actions in the [mmu_leds] section for each mmu_unit. Note
# that 'define_on' is optional and if sepcified can be used to restrict effect creation to the desired segments
#
[mmu_led_effect mmu_breathing_red]
layers:       breathing 4 0 top (1,0,0)

[mmu_led_effect mmu_white_slow]
define_on:    exit, status
layers:       breathing 1.0 0 top (0.8,0.8,0.8)

[mmu_led_effect mmu_white_fast]
define_on:    exit, status
layers:       breathing 0.6 0 top (0.2,0.2,0.2)

[mmu_led_effect mmu_blue_clockwise_slow]
define_on:    gates, status
layers:       chase .5 .5 top (0,0,1), (0,0,.4)

[mmu_led_effect mmu_blue_clockwise_fast]
define_on:    gates, status
layers:       chase 1 .5 top (0,0,1), (0,0,.4)

[mmu_led_effect mmu_blue_anticlock_slow]
define_on:    gates, status
layers:       chase -.5 .5 top (0,0,1), (0,0,.4)

[mmu_led_effect mmu_blue_anticlock_fast]
define_on:    gates, status
layers:       chase -1 .5 top (0,0,1), (0,0,.4)

[mmu_led_effect mmu_strobe]
layers:       strobe    1 1.5 add (1,1,1)
              breathing 2 0   difference (0.95,0,0)
              static    0 0   top (1,0,0)

[mmu_led_effect mmu_static_green]
define_on:    gates
layers:       static 0 0 top (0,0.5,0)

[mmu_led_effect mmu_static_orange]
define_on:    gates
layers:       static 0 0 top (0.5,0.2,0)

[mmu_led_effect mmu_static_blue]
define_on:    gates
layers:       static 0 0 top (0,0,1)

[mmu_led_effect mmu_static_black]
define_on:    gates
layers:       static 0 0 top (0,0,0)

[mmu_led_effect mmu_rainbow]
define_on:    entry, exit, status
layers:       gradient  0.8  0.5 add (0.3, 0.0, 0.0), (0.0, 0.3, 0.0), (0.0, 0.0, 0.3)




# ┌──────────────────────────────────────────────────────────────────────────────────────────────────────┐
# │ ███╗   ███╗██╗███████╗ ██████╗    ██╗  ██╗ █████╗ ██████╗ ██████╗ ██╗    ██╗ █████╗ ██████╗ ███████╗ │
# │ ████╗ ████║██║██╔════╝██╔════╝    ██║  ██║██╔══██╗██╔══██╗██╔══██╗██║    ██║██╔══██╗██╔══██╗██╔════╝ │
# │ ██╔████╔██║██║███████╗██║         ███████║███████║██████╔╝██║  ██║██║ █╗ ██║███████║██████╔╝█████╗   │
# │ ██║╚██╔╝██║██║╚════██║██║         ██╔══██║██╔══██║██╔══██╗██║  ██║██║███╗██║██╔══██║██╔══██╗██╔══╝   │
# │ ██║ ╚═╝ ██║██║███████║╚██████╗    ██║  ██║██║  ██║██║  ██║██████╔╝╚███╔███╔╝██║  ██║██║  ██║███████╗ │
# │ ╚═╝     ╚═╝╚═╝╚══════╝ ╚═════╝    ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝  ╚══╝╚══╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝ │
# └──────────────────────────────────────────────────────────────────────────────────────────────────────┘
#
# Any additional hardware fitted to printer related to MMU can be defined here.
# E.g. gantry servo, blobifer servo, etc
#
# EXCLUDE FROM CONFIG BUILDER -- IMPORTANT do not alter or remove this line. Config below is never upgraded

## (uncomment this section if you have a gantry servo for toolhead cutter pin)
#[mmu_servo mmu_gantry_servo]
#pin: [[PIN_GANTRY_SERVO]]
#maximum_servo_angle:180
#minimum_pulse_width: 0.00075
#maximum_pulse_width: 0.00225
#initial_angle: 180
