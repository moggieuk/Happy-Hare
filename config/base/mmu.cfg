########################################################################################################################
# Happy Hare MMU Software
#
# EDIT THIS FILE BASED ON YOUR SETUP
#
# Copyright (C) 2022-2025  moggieuk#6538 (discord)
#                          moggieuk@hotmail.com
# This file may be distributed under the terms of the GNU GPLv3 license.
#
# Goal: Happy Hare MMU hardware pin config
#
# (\_/)
# ( *,*)
# (")_(") Happy Hare Ready
#
#
# This contains aliases for pins for MCU type [[PARAM_BOARD_TYPE]]
#
[mcu mmu]
serial: [[PARAM_SERIAL]]	# Change to `canbus_uuid: 1234567890` for CANbus setups
 

# PIN ALIASES FOR MMU MCU BOARD ----------------------------------------------------------------------------------------
# ██████╗ ██╗███╗   ██╗     █████╗ ██╗     ██╗ █████╗ ███████╗
# ██╔══██╗██║████╗  ██║    ██╔══██╗██║     ██║██╔══██╗██╔════╝
# ██████╔╝██║██╔██╗ ██║    ███████║██║     ██║███████║███████╗
# ██╔═══╝ ██║██║╚██╗██║    ██╔══██║██║     ██║██╔══██║╚════██║
# ██║     ██║██║ ╚████║    ██║  ██║███████╗██║██║  ██║███████║
# ╚═╝     ╚═╝╚═╝  ╚═══╝    ╚═╝  ╚═╝╚══════╝╚═╝╚═╝  ╚═╝╚══════╝
# Section to create alias for pins used by MMU for easier integration into Klippain and RatOS. The names match those
# referenced in the mmu_hardware.cfg file. If you get into difficulty you can also comment out this aliases definition
# completely and configure the pin names directly into mmu_hardware.cfg. However, use of aliases is encouraged.

# Note: that aliases are not created for TOOLHEAD_SENSOR, EXTRUDER_SENSOR or SYNC_FEEDBACK_SENSORS because those are
# most likely on the printer's main mcu. These should be set directly in mmu_hardware.cfg
#
[board_pins mmu]
mcu: mmu # Assumes using an external / extra mcu dedicated to MMU
aliases:
    MMU_GEAR_UART=[[PIN_GEAR_UART]],
    MMU_GEAR_STEP=[[PIN_GEAR_STEP]],
    MMU_GEAR_DIR=[[PIN_GEAR_DIR]],
    MMU_GEAR_ENABLE=[[PIN_GEAR_ENABLE]],
    MMU_GEAR_DIAG=[[PIN_GEAR_DIAG]],

[% if not MMU_HAS_SELECTOR and not MMU_HAS_SERVO %]
[% for i in range(1, PARAM_NUM_GATES|int) %]
    MMU_GEAR_UART_[[i]]=[[ (PIN_GEAR_UART_|d)[i] ]],
    MMU_GEAR_STEP_[[i]]=[[ (PIN_GEAR_STEP_|d)[i] ]],
    MMU_GEAR_DIR_[[i]]=[[ (PIN_GEAR_DIR_|d)[i] ]],
    MMU_GEAR_ENABLE_[[i]]=[[ (PIN_GEAR_ENABLE_|d)[i] ]],
    MMU_GEAR_DIAG_[[i]]=[[ (PIN_GEAR_DIAG_|d)[i] ]],

[% endfor %]
[% endif %] 
[% if MMU_HAS_SELECTOR %]
    MMU_SEL_UART=[[PIN_SELECTOR_UART]],
    MMU_SEL_STEP=[[PIN_SELECTOR_STEP]],
    MMU_SEL_DIR=[[PIN_SELECTOR_DIR]],
    MMU_SEL_ENABLE=[[PIN_SELECTOR_ENABLE]],
    MMU_SEL_DIAG=[[PIN_SELECTOR_DIAG]],
    MMU_SEL_ENDSTOP=[[PIN_SELECTOR_ENDSTOP]],
[% endif %]
[% if MMU_HAS_SERVO %]
    MMU_SEL_SERVO=[[PIN_SELECTOR_SERVO]],
[% endif %]
[% if MMU_HAS_ENCODER %]
    MMU_ENCODER=[[PIN_ENCODER]],
[% endif %]
    MMU_GATE_SENSOR=[[PIN_GATE_SENSOR]],
    MMU_NEOPIXEL=[[PIN_NEOPIXEL]],
    
[% for i in range(0, PARAM_NUM_GATES|int) %]
    MMU_PRE_GATE_[[i]]=[[ (PIN_PRE_GATE_|d)[i] ]],
[% endfor %]
[% for i in range(0, PARAM_NUM_GATES|int) %]
    MMU_POST_GEAR_[[i]]=[[ (PIN_POST_GEAR_|d)[i] ]],
[% endfor %]
    
[% if MMU_HAS_ESPOOLER %]
[% for i in range(0, PARAM_NUM_GATES|int) %]
    MMU_ESPOOLER_EN_[[i]]=[[ (PIN_ESPOOLER_EN_|d)[i] ]],
    MMU_ESPOOLER_RWD_[[i]]=[[ (PIN_ESPOOLER_RWD_|d)[i] ]],
    MMU_ESPOOLER_FWD_[[i]]=[[ (PIN_ESPOOLER_FWD_|d)[i] ]],
    MMU_ESPOOLER_TRIG_[[i]]=[[ (PIN_ESPOOLER_TRIG_|d)[i] ]],
[% endfor %]
[% endif %]
