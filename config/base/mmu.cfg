########################################################################################################################
# Happy Hare MMU Software
#
# EDIT THIS FILE BASED ON YOUR SETUP
#
# Copyright (C) 2022  moggieuk#6538 (discord) moggieuk@hotmail.com
# This file may be distributed under the terms of the GNU GPLv3 license.
#
# Goal: Happy Hare MMU hardware pin config
#
# (\_/)
# ( *,*)
# (")_(") Happy Hare Ready
#
#
# This contains aliases for pins for MCU type {brd_type}
#
[mcu mmu]
serial: {serial}	# Change to `canbus_uuid: 1234567890` for CANbus setups


# PIN ALIASES FOR MMU MCU BOARD ----------------------------------------------------------------------------------------
# ██████╗ ██╗███╗   ██╗     █████╗ ██╗     ██╗ █████╗ ███████╗
# ██╔══██╗██║████╗  ██║    ██╔══██╗██║     ██║██╔══██╗██╔════╝
# ██████╔╝██║██╔██╗ ██║    ███████║██║     ██║███████║███████╗
# ██╔═══╝ ██║██║╚██╗██║    ██╔══██║██║     ██║██╔══██║╚════██║
# ██║     ██║██║ ╚████║    ██║  ██║███████╗██║██║  ██║███████║
# ╚═╝     ╚═╝╚═╝  ╚═══╝    ╚═╝  ╚═╝╚══════╝╚═╝╚═╝  ╚═╝╚══════╝
# Section to create alias for pins used by MMU for easier integration into Klippain and RatOS. The names match those
# referenced in the mmu_hardware.cfg file. If you get into difficulty you can also comment out this aliases definition
# completely and configure the pin names directly into mmu_hardware.cfg. However, use of aliases is encouraged.

# Note: that aliases are not created for TOOLHEAD_SENSOR, EXTRUDER_SENSOR or SYNC_FEEDBACK_SENSORS because those are
# most likely on the printer's main mcu. These should be set directly in mmu_hardware.cfg
#
[board_pins mmu]
mcu: mmu # Assumes using an external / extra mcu dedicated to MMU
aliases:
    MMU_GEAR_UART={pin_gear_uart},
    MMU_GEAR_STEP={pin_gear_step},
    MMU_GEAR_DIR={pin_gear_dir},
    MMU_GEAR_ENABLE={pin_gear_enable},
    MMU_GEAR_DIAG={pin_gear_diag},

    MMU_GEAR_UART_1={pin_gear_1_uart},
    MMU_GEAR_STEP_1={pin_gear_1_step},
    MMU_GEAR_DIR_1={pin_gear_1_dir},
    MMU_GEAR_ENABLE_1={pin_gear_1_enable},
    MMU_GEAR_DIAG_1={pin_gear_1_diag},

    MMU_SEL_UART={pin_selector_uart},
    MMU_SEL_STEP={pin_selector_step},
    MMU_SEL_DIR={pin_selector_dir},
    MMU_SEL_ENABLE={pin_selector_enable},
    MMU_SEL_DIAG={pin_selector_diag},
    MMU_SEL_ENDSTOP={pin_selector_endstop},
    MMU_SEL_SERVO={pin_selector_servo},

    MMU_ENCODER={pin_encoder},
    MMU_GATE_SENSOR={pin_gate_sensor},
    MMU_NEOPIXEL={pin_neopixel},

    MMU_PRE_GATE_0={pin_pre_gate_0},

    MMU_POST_GEAR_0={pin_gear_sensor_0},

    MMU_DC_MOT_0_EN={pin_dc_espooler_en_0},
    MMU_DC_MOT_0_RWD={pin_dc_espooler_rwd_0},
    MMU_DC_MOT_0_FWD={pin_dc_espooler_fwd_0},
