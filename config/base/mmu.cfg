########################################################################################################################
# Happy Hare MMU Software
#
# EDIT THIS FILE BASED ON YOUR SETUP
#
# Copyright (C) 2022-2025  moggieuk#6538 (discord)
#                          moggieuk@hotmail.com
# This file may be distributed under the terms of the GNU GPLv3 license.
#
# Goal: Define the logical MMU machine composed of one or more physical MMU units
#
# (\_/)
# ( *,*)
# (")_(") Happy Hare Ready
#



# MMU MACHINE ---------------------------------------------------------------------------------------------------------
# ███╗   ███╗███╗   ███╗██╗   ██╗    ███╗   ███╗ █████╗  ██████╗██╗  ██╗██╗███╗   ██╗███████╗
# ████╗ ████║████╗ ████║██║   ██║    ████╗ ████║██╔══██╗██╔════╝██║  ██║██║████╗  ██║██╔════╝
# ██╔████╔██║██╔████╔██║██║   ██║    ██╔████╔██║███████║██║     ███████║██║██╔██╗ ██║█████╗  
# ██║╚██╔╝██║██║╚██╔╝██║██║   ██║    ██║╚██╔╝██║██╔══██║██║     ██╔══██║██║██║╚██╗██║██╔══╝  
# ██║ ╚═╝ ██║██║ ╚═╝ ██║╚██████╔╝    ██║ ╚═╝ ██║██║  ██║╚██████╗██║  ██║██║██║ ╚████║███████╗
# ╚═╝     ╚═╝╚═╝     ╚═╝ ╚═════╝     ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝╚══════╝
#
# A mmu_machine is a logical collection of one or more potentially disimilar MMU units aggregated together to
# act like and be managed as one. MMU's can be physically combined using a bowden splitter/combiner.
# The gates of each MMU will form a contiguous sequence starting from 0 for the first mmu_unit defined.
#
# HOMING CAPABLE EXTRUDER ('homing_extruder')
# With Happy Hare installed even the extruder can be homed. You will find the usual 'endstop' parameters can be added
# to your '[extruder]' section.  Useless you have some clever load cell attached to your nozzle it only really makes
# sense to configure stallguard style "touch" homing. To do this add lines similar to this to your existing
# '[extruder]' definition in printer.cfg.
#
#    [extruder]
#    endstop_pin: tmc2209_extruder:virtual_endstop
#
# Also be sure to add the appropriate stallguard config to the TMC section, e.g.
#
#    [tmc2209 extruder]
#    diag_pin: E_DIAG		# Set to MCU pin connected to TMC DIAG pin for extruder
#    driver_SGTHRS: 100		# 255 is most sensitive value, 0 is least sensitive
#
# Happy Hare will take care of the rest and add a 'mmu_ext_touch' endstop automatically
#
[mmu_machine]
units: [[PARAM_MMU_UNITS]]			# Comma separated list of mmu unit config names. E.g unit0, unit1

extruder_name: extruder		# Name of extruder that MMU is attached to. Defaults to 'extruder'
homing_extruder: 1		# CAUTION: Normally this should be 1. 0 will disable the homing extruder capability

# Filament sensors ALWAYS SHARED BY ALL mmu_units:
# (comment out if not fitted)
#
# These sensors are on the toolhead and often controlled by the main printer mcu since there can only be one.
#   'extruder_switch_pin'    .. 'extruder' sensor detects filament just before the extruder entry
#   'toolhead_switch_pin'    .. 'toolhead' sensor detects filament after extruder entry
#
[% if PIN_EXTRUDER_SENSOR %]
extruder_switch_pin: [[PIN_EXTRUDER_SENSOR]]
[% else %]
#extruder_switch_pin:
[% endif %]
[% if PIN_TOOLHEAD_SENSOR %]
toolhead_switch_pin: [[PIN_TOOLHEAD_SENSOR]]
[% else %]
#toolhead_switch_pin:
[% endif %]



# ADDITIONAL MISCELLANEOUS MMU HARDWARE FITTED TO PRINTER =============================================================
# ███╗   ███╗██╗███████╗ ██████╗    ██╗  ██╗ █████╗ ██████╗ ██████╗ ██╗    ██╗ █████╗ ██████╗ ███████╗
# ████╗ ████║██║██╔════╝██╔════╝    ██║  ██║██╔══██╗██╔══██╗██╔══██╗██║    ██║██╔══██╗██╔══██╗██╔════╝
# ██╔████╔██║██║███████╗██║         ███████║███████║██████╔╝██║  ██║██║ █╗ ██║███████║██████╔╝█████╗  
# ██║╚██╔╝██║██║╚════██║██║         ██╔══██║██╔══██║██╔══██╗██║  ██║██║███╗██║██╔══██║██╔══██╗██╔══╝  
# ██║ ╚═╝ ██║██║███████║╚██████╗    ██║  ██║██║  ██║██║  ██║██████╔╝╚███╔███╔╝██║  ██║██║  ██║███████╗
# ╚═╝     ╚═╝╚═╝╚══════╝ ╚═════╝    ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝  ╚══╝╚══╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝
#
# Any additional hardware fitted to printer related to MMU should be defined here.
# E.g. gantry servo, blobifer servo, etc

# GANTRY SERVO FOR TOOLHEAD FILAMENT CUTTER ---------------------------------------------------------------------------
# (uncomment this section if you have a gantry servo for toolhead cutter pin)
#
#[mmu_servo mmu_gantry_servo]
#pin: [[PIN_GANTRY_SERVO]]
#maximum_servo_angle:180
#minimum_pulse_width: 0.00075
#maximum_pulse_width: 0.00225
#initial_angle: 180



# LED EFFECTS ---------------------------------------------------------------------------------------------------------
# ██╗     ███████╗██████╗     ███████╗███████╗███████╗███████╗ ██████╗████████╗███████╗
# ██║     ██╔════╝██╔══██╗    ██╔════╝██╔════╝██╔════╝██╔════╝██╔════╝╚══██╔══╝██╔════╝
# ██║     █████╗  ██║  ██║    █████╗  █████╗  █████╗  █████╗  ██║        ██║   ███████╗
# ██║     ██╔══╝  ██║  ██║    ██╔══╝  ██╔══╝  ██╔══╝  ██╔══╝  ██║        ██║   ╚════██║
# ███████╗███████╗██████╔╝    ███████╗██║     ██║     ███████╗╚██████╗   ██║   ███████║
# ╚══════╝╚══════╝╚═════╝     ╚══════╝╚═╝     ╚═╝     ╚══════╝ ╚═════╝   ╚═╝   ╚══════╝
#
# These are the default effects that may be assigned to actions in the [mmu_leds] section for each mmu_unit. Note
# that 'define_on' is optional and if sepcified can be used to restrict effect creation to the desired segments
#
[mmu_led_effect mmu_breathing_red]
layers:       breathing 4 0 top (1,0,0)

[mmu_led_effect mmu_white_slow]
define_on:    exit, status
layers:       breathing 1.0 0 top (0.8,0.8,0.8)

[mmu_led_effect mmu_white_fast]
define_on:    exit, status
layers:       breathing 0.6 0 top (0.2,0.2,0.2)

[mmu_led_effect mmu_blue_clockwise_slow]
define_on:    gates, status
layers:       chase .5 .5 top (0,0,1), (0,0,.4)

[mmu_led_effect mmu_blue_clockwise_fast]
define_on:    gates, status
layers:       chase 1 .5 top (0,0,1), (0,0,.4)

[mmu_led_effect mmu_blue_anticlock_slow]
define_on:    gates, status
layers:       chase -.5 .5 top (0,0,1), (0,0,.4)

[mmu_led_effect mmu_blue_anticlock_fast]
define_on:    gates, status
layers:       chase -1 .5 top (0,0,1), (0,0,.4)

[mmu_led_effect mmu_strobe]
layers:       strobe    1 1.5 add (1,1,1)
              breathing 2 0   difference (0.95,0,0)
              static    0 0   top (1,0,0)

[mmu_led_effect mmu_static_green]
define_on:    gates
layers:       static 0 0 top (0,0.5,0)

[mmu_led_effect mmu_static_orange]
define_on:    gates
layers:       static 0 0 top (0.5,0.2,0)

[mmu_led_effect mmu_static_blue]
define_on:    gates
layers:       static 0 0 top (0,0,1)

[mmu_led_effect mmu_static_black]
define_on:    gates
layers:       static 0 0 top (0,0,0)

[mmu_led_effect mmu_rainbow]
define_on:    entry, exit, status
layers:       gradient  0.8  0.5 add (0.3, 0.0, 0.0), (0.0, 0.3, 0.0), (0.0, 0.0, 0.3)


# PAUL TODO .. add shared parameters
