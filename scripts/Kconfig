happy_hare_version = 3.00
formatted_version = $(shell, echo "$(happy_hare_version)" | sed 's/\([0-9]\+\)\.\([0-9]\)\([0-9]\)/\1.\2.\3/')
# Used to convert a shell command result to a y/n value
to_bool = $(shell, $(1) && echo y || echo n)

mainmenu "Happy Hare $(formatted_version) Configuration"

config VERSION
  string	
  default "$(happy_hare_version)"

config F_VERSION
  string
  default "$(formatted_version)"

comment '					'
comment '(\\_/)					'
comment '( *,*)					'
comment '(")_(") Happy Hare version $(formatted_version) 	'	
comment '					'

config IS_MIPS
  bool 
  default $(to_bool, uname -m | grep -q 'mips')

rsource "Kconfig.mmu_types"

config MMU_HAS_ENCODER
  bool
  prompt "Does the MMU have an encoder?" if HW_MMU_TYPE_CUSTOM

config MMU_HAS_SELECTOR
  bool
  prompt "Does the MMU have a selector?" if HW_MMU_TYPE_CUSTOM

config HW_VARIABLE_BOWDEN_LENGTHS
  bool
  prompt "Variable bowden lengths?" if HW_MMU_TYPE_CUSTOM

config HW_VARIABLE_ROTATION_DISTANCES
  bool
  prompt "Variable rotation distances?" if HW_MMU_TYPE_CUSTOM

config HW_REQUIRE_BOWDEN_MOVE
  bool
  prompt "Require bowden move?" if HW_MMU_TYPE_CUSTOM

config HW_FILAMENT_ALWAYS_GRIPPED
  bool
  prompt "Filament always gripped?" if HW_MMU_TYPE_CUSTOM

rsource "boards/Kconfig"
rsource "Kconfig.serial"

choice 
  prompt "Selector type" if MMU_HAS_SELECTOR && HW_MMU_TYPE_CUSTOM
  default HW_SELECTOR_TYPE_LINEAR if MMU_HAS_SELECTOR
  default HW_SELECTOR_TYPE_VIRTUAL
  config HW_SELECTOR_TYPE_LINEAR
    bool "Linear selector"
  config HW_SELECTOR_TYPE_VIRTUAL
    bool "Virtual selector"
endchoice

config HW_SELECTOR_TYPE
  string
  depends on MMU_HAS_SELECTOR
  default "LinearSelector" if HW_SELECTOR_TYPE_LINEAR
  default "VirtualSelector" if HW_SELECTOR_TYPE_VIRTUAL

choice 
  prompt "Selector servo type" 
  depends on MMU_HAS_SELECTOR

  if HW_MMU_VENDOR = "ERCF"
    config HW_SERVO_TYPE_MG_90S
      bool "MG-90S"
    config HW_SERVO_TYPE_SAVOX_SH0255MG
      bool "Savox SH0255MG"
    config HW_SERVO_TYPE_GDW_DS041MG
      bool "GDW DS041MG"
  endif

  if HW_MMU_VENDOR = "Tradrack"
    config HW_SERVO_TYPE_TRADRACK
      bool "PS-1171MG or FT1117M (Tradrack)"
  endif

  config HW_SERVO_TYPE_OTHER
    bool "Not listed / Other"
endchoice

config HW_NUM_GATES
  int "Number of gates" 
  range 1 32
  default 12

config ENABLE_LEDS 
  bool "Enable neopixel LEDs support?"

config ENABLE_SELECTOR_TOUCH
  bool "Enable touch selector operation using TMC Stallguard?"
  help
    This allows for additional selector recovery steps but is difficult to tune.
    Not recommended if you are new to MMU/Happy-Hare.
    The MCU must have DIAG output for steppers. Possible to configure later.

if HW_BOARD_TYPE_EASY_BRD
  comment " !!! IMPORTANT: Set the J6 jumper pins to 2-3 and 4-5, i.e. .[..][..]  MAKE A NOTE NOW !!! " 
    depends on SELECTOR_TOUCH
  comment " !!! IMPORTANT: Set the J6 jumper pins to 1-2 and 4-5, i.e. [..].[..]  MAKE A NOTE NOW !!! " 
    depends on !SELECTOR_TOUCH
endif 

config ENABLE_CLOG_DETECT
  bool "Enable clog detection?"
  depends on MMU_HAS_ENCODER
config ENABLE_AUTO_CLOG_DETECT
  bool "Enable automatic clog detection length?"
  depends on MMU_ENABLE_CLOG_DETECT
  default y

config ENABLE_ENDLESS_SPOOL
  bool "Enable EndlessSpool? This uses filament runout detection to automate switching to a new spool without interruption."

config INSTALL_INCLUDES
  bool "Install includes in printer.cfg?"

if INSTALL_INCLUDES
  config INSTALL_12864_MENU
    bool "Install Mini 12864 menu configuration?"
  config INSTALL_CLIENT_MACROS
    bool "Install default pause/resume macros supplied with Happy Hare?"
    default y
  config INSTALL_EREC_CUTTER
    bool "Install EREC filament cutter macros?"
  config INSTALL_BLOBIFIER
    bool "Install Blobifier macros?"
  config INSTALL_ESPOOLER
    bool "Install eSpooler macros?"
endif

config SHOW_ADVANCED_SETTINGS
  bool "Show advanced settings?"
  default y if HW_MMU_TYPE_CUSTOM

menu "Paths"
  visible if SHOW_ADVANCED_SETTINGS
  config PRINTER_CONFIG 
    string "Printer config file"
    depends on !REPETIER
    default "printer.cfg"
  config KLIPPER_HOME
    string "Klipper directory"
    # will be bootstrapped by Makefile. (default ~/klipper or /usr/share/klipper, depending on architecture) 
    # Or can be overridden on first call with 'CONFIG_KLIPPER_HOME=/klipper/path make menuconfig'
    default "${CONFIG_KLIPPER_HOME}" 
  config KLIPPER_CONFIG_HOME
    string "Klipper config directory"
    default "/usr/data/printer_data/config" if IS_MIPS
    default "~" if OCTOPRINT
    default "~/printer_data/config"
  config MOONRAKER_HOME
    string "Moonraker directory"
    depends on !OCTOPRINT
    default "/usr/data/moonraker" if IS_MIPS
    default "~/moonraker"
  config HAPPY_HARE_HOME
    string "Happy Hare directory"
    default "/usr/data/Happy-Hare" if IS_MIPS
    default "$(shell,	pwd)"
  config GCODES_PATH
    string "Gcodes directory"
    default "~/printer_data/gcodes"
endmenu  

menu "Services"
  visible if SHOW_ADVANCED_SETTINGS
  config SERVICE_KLIPPER
    string "Klipper service name"
    depends on !REPETIER
    default "klipper_service" if IS_MIPS
    default "klipper.service"
  config SERVICE_MOONRAKER
    string "Moonraker service name"
    depends on !OCTOPRINT
    default "moonraker_service" if IS_MIPS
    default "moonraker.service"
  config SERVICE_OCTOPRINT
    string "Octoprint service name"
    depends on OCTOPRINT
    default "octoprint.service"
endmenu

menu "Pins"
  visible if SHOW_ADVANCED_SETTINGS
  rsource "Kconfig.pins"
endmenu

menu "Motors"
  visible if SHOW_ADVANCED_SETTINGS
  rsource "Kconfig.motors"
endmenu

menu "Endstops"
  visible if SHOW_ADVANCED_SETTINGS
  rsource "Kconfig.endstops"
endmenu

config REPETIER
  bool "Enable Repetier support?" if SHOW_ADVANCED_SETTINGS

config REPETIER_NAME
  string "Repetier name"
  depends on REPETIER

config OCTOPRINT
  bool "Enable Octoprint support?" if SHOW_ADVANCED_SETTINGS
  depends on !IS_MIPS
